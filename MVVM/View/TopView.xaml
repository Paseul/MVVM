<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MVVM.ViewModel"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:Custom="http://www.galasoft.ch/mvvmlight" x:Class="MVVM.View.TopView"
             mc:Ignorable="d" 
             DataContext="{Binding Top, Source={StaticResource Locator}}"
             d:DesignHeight="200" d:DesignWidth="1200">
    <UserControl.Resources>
        <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF" Offset="0.0"/>
            <GradientStop Color="#CCC" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="redNormalBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F00" Offset="0.0"/>
            <GradientStop Color="#C00" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#BBB" Offset="0.0"/>
            <GradientStop Color="#EEE" Offset="0.1"/>
            <GradientStop Color="#EEE" Offset="0.9"/>
            <GradientStop Color="#FFF" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="redPressedBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#B00" Offset="0.0"/>
            <GradientStop Color="#E00" Offset="0.1"/>
            <GradientStop Color="#E00" Offset="0.9"/>
            <GradientStop Color="#F00" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#CCC" Offset="0.0"/>
            <GradientStop Color="#444" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="redNormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#C00" Offset="0.0"/>
            <GradientStop Color="#400" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="BorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#CCC" Offset="0.0"/>
            <GradientStop Color="#444" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="redBorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#C00" Offset="0.0"/>
            <GradientStop Color="#400" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#444" Offset="0.0"/>
            <GradientStop Color="#888" Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="redPressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#400" Offset="0.0"/>
            <GradientStop Color="#800" Offset="1.0"/>
        </LinearGradientBrush>

        <Style x:Key="SimpleButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Grid">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{StaticResource PressedBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RedButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="Background" Value="{StaticResource redNormalBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource redNormalBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Grid">
                            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"/>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="{StaticResource redPressedBrush}" TargetName="Border"/>
                                <Setter Property="BorderBrush" Value="{StaticResource redPressedBorderBrush}" TargetName="Border"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2,2,1,1"/>
                            <Border BorderBrush="#FFBAB7B7" BorderThickness="0,0,1,1" Margin="1,1,0,0"/>
                            <Border BorderBrush="Black" BorderThickness="1,1,0,0" Width="Auto"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Border BorderBrush="Gray" BorderThickness="1">
            <Grid>
                <TextBlock HorizontalAlignment="Left" Margin="19,10,0,0" TextWrapping="Wrap" Text="Laser Power (W)" VerticalAlignment="Top" FontSize="24" FontWeight="Bold"/>
                <TextBox HorizontalAlignment="Left" Margin="19,47,0,0" TextWrapping="Wrap" Text="{Binding Pd7}" TextAlignment="Right" VerticalAlignment="Top" Height="141" Width="332" Background="#FFD4D4D4" FontSize="100" FontWeight="Bold" Style="{StaticResource TextBoxStyle1}" IsEnabled="False"/>
                <TextBlock HorizontalAlignment="Left" Margin="377,10,0,0" TextWrapping="Wrap" Text="Coolant Temperature (℃)" VerticalAlignment="Top" FontSize="24" FontWeight="Bold"/>
                <TextBox HorizontalAlignment="Left" Margin="377,47,0,0" TextWrapping="Wrap" Text="{Binding PaTemp13}" TextAlignment="Right" VerticalAlignment="Top" Height="141" Width="332" Background="#FFD4D4D4" FontSize="100" FontWeight="Bold" Style="{StaticResource TextBoxStyle1}" IsEnabled="False"/>
                <TextBlock HorizontalAlignment="Left" Margin="727,29,0,0" TextWrapping="Wrap" Text="SEED Humidity (%)" VerticalAlignment="Top" FontSize="14" FontWeight="Bold"/>
                <TextBox HorizontalAlignment="Left" Margin="730,48,0,0" TextWrapping="Wrap" Text="{Binding SeedHumid}" TextAlignment="Right" VerticalAlignment="Top" Height="60" Width="120" Background="#FFD4D4D4" FontSize="48" FontWeight="Bold" Style="{StaticResource TextBoxStyle1}" IsEnabled="False"/>
                <TextBlock HorizontalAlignment="Left" Margin="733,109,0,0" TextWrapping="Wrap" Text="PA Humidity (%)" VerticalAlignment="Top" FontSize="14" FontWeight="Bold"/>
                <TextBox HorizontalAlignment="Left" Margin="730,128,0,0" TextWrapping="Wrap" Text="{Binding PaHumid}" TextAlignment="Right" VerticalAlignment="Top" Height="60" Width="120" Background="#FFD4D4D4" FontSize="48" FontWeight="Bold" Style="{StaticResource TextBoxStyle1}" IsEnabled="False"/>
                <Button Content="E-STOP" Margin="990,47,68,10" FontSize="24" FontWeight="Bold" Style="{StaticResource RedButton}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <Custom:EventToCommand Command="{Binding OnStopCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
                <Button Content="SAVE" Margin="870,47,208,10" FontSize="24" FontWeight="Bold" Style="{StaticResource SimpleButton}" Opacity="0">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <Custom:EventToCommand Command="{Binding OnSaveCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </Grid>
        </Border>
    </Grid>
</UserControl>
